<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--    配置凭证匹配器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!--        这里配置的算法和迭代次数 和MD5Util中使用的算法和迭代次数是一直的-->
        <property name="hashAlgorithmName" value="MD5"></property>
        <property name="hashIterations" value="1024"></property>
    </bean>


    <!--    MyShiroRealm bean配置-->
    <bean id="myShiroRealm" class="com.hqyj.twelve.realm.MyShiroRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
    </bean>

    <!--    配置shiro的核心组件，SecurityManager-->
    <bean id="defaultWebSecurityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--        我们自定义的认证域对象注入到SecurityManager对象中-->
        <property name="realm" ref="myShiroRealm"/>
    </bean>

    <!--    shiro过滤器，用于授权-->
    <!--    这里的id要和web.xml中配置的代理过滤器的名称一致-->
    <!-- 当已认证的用户访问系统受限资源时，检查所具有的权限，如果有该资源的访问权限
      授权通过，允许访问，授权失败，拒绝访问
      web应用的受限资源，就是我们的系统中暴露出来的url资源
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="defaultWebSecurityManager"/>
        <!--        没有认证过的用户，访问受限资源时，shiro直接跳转到该处配置的地址-->
        <property name="loginUrl" value="/login.jsp"/>
        <!--        已认证过的但是没有对应访问权限的用户访问受限资源时，shiro直接跳转到该页面-->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filterChainDefinitions">
            <value>
                <!--                配置过滤器链 查找规则：从上往下匹配，匹配中了就结束匹配
                                    想要控制的url = 身份信息
                                    身份信息：anon  匿名用户
                                             authc  已认证过的用户
                                             user  曾经认证过的用户
                                             roles[角色信息] 具有某个角色的用户
                -->
                    /kaptcha.jpg = anon
                    /index.jsp = anon
                    /user/login = anon
                    /admin/**=roles[管理员]
                    /** = authc

            </value>
        </property>
    </bean>

</beans>